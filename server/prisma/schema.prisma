// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//
generator client {
  provider = "prisma-client-js"
}

//
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
model ChangeLog {
  id Int @id @default(autoincrement()) @map("id")

  //
  createdAt       DateTime @default(now()) @map("created_at")
  createdByUserId Int?     @map("created_by_user_id")
  createdByUser   User?    @relation(name: "created_by_user", fields: [createdByUserId], references: [id])

  //
  updatedAt       DateTime? @updatedAt @map("updated_at")
  updatedByUserId Int?      @map("updated_by_user_id")
  updatedByUser   User?     @relation(name: "updated_by_user", fields: [updatedByUserId], references: [id])

  //
  users  User[]  @relation("changeLogUser")
  rights Right[] @relation("changeLogRight")

  //
  @@map("change_logs")
}

//
model Right {
  id          Int     @id @default(autoincrement()) @map("id")
  name        String  @unique @map("name")
  description String? @map("description")

  //
  roles Role[]

  //
  changeLogId Int?       @map("change_log_id")
  changeLog   ChangeLog? @relation("changeLogRight", fields: [changeLogId], references: [id])

  //
  @@map("rights")
}

//
model Role {
  id          Int     @id @default(autoincrement()) @map("id")
  name        String  @unique @map("name")
  description String? @map("description")

  //
  rights Right[]

  //
  @@map("roles")
}

//
model User {
  id Int @id @default(autoincrement()) @map("id")

  //
  firstName   String @map("first_name")
  lastName    String @map("last_name")
  phoneNumber String @map("phone_number")

  //
  profile Profile?

  //
  changeLogId Int?       @map("change_log_id")
  changeLog   ChangeLog? @relation("changeLogUser", fields: [changeLogId], references: [id])

  //
  createdByChangeLogs ChangeLog[] @relation(name: "created_by_user")
  updatedByChangeLogs ChangeLog[] @relation(name: "updated_by_user")

  @@map("users")
}

//
model Profile {
  id Int @id @default(autoincrement()) @map("id")

  //
  email    String @unique @map("email")
  password String @map("password")
  session  String @map("session")

  //
  isVerified Boolean @map("is_verified")
  isActive   Boolean @map("is_active")
  isDeleted  Boolean @map("is_deleted")

  //
  userId Int  @unique @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  //
  @@map("profiles")
}
